---
# Copyright 2016 PingCAP, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# See the License for the specific language governing permissions and
# limitations under the License.

# The playbook of TiDB

- hosts: tidb_servers
  vars_files: 
    - group_vars/tidb_servers.yml
    - group_vars/monitoring_servers.yml
  tasks:
  - name: deploy mysql_alive binary
    copy: src="{{ resources_dir }}/bin/mysql_alive" dest="{{ deploy_dir }}/bin/" mode=0755 backup=yes

  - name: run mysql_alive
    shell: >
      {{ deploy_dir }}/bin/mysql_alive -host 127.0.0.1 -port {{ tidb_port }} -user "{{ tidb_check_alive_user }}" -password "{{ tidb_check_alive_password }}" -metrics {{ hostvars[inventory_hostname].groups.monitoring_servers[0] }}:{{ pushgateway_port }} -suffix-command "echo tidb_need_restart_now"
    register: mysql_alive_output

  - name: stop TiDB by supervise
    shell: cd {{ deploy_dir }}/scripts && ./stop_{{ item }}.sh
    when: process_supervision == 'supervise' and mysql_alive_output.stderr.find('tidb_need_restart_now') != -1
    with_items:
      - tidb

  - name: stop TiDB by systemd
    systemd: name=tidb-{{ tidb_port }}.service state=stopped
    become: true
    when: process_supervision == 'systemd' and ansible_user != "root" and mysql_alive_output.stderr.find('tidb_need_restart_now') != -1

  - name: stop TiDB by systemd
    systemd: name=tidb-{{ tidb_port }}.service state=stopped
    when: process_supervision == 'systemd' and ansible_user == "root" and mysql_alive_output.stderr.find('tidb_need_restart_now') != -1
    vars:
      - ansible_become: false
      - ansible_become_user: root

  - name: start TiDB by supervise
    shell: cd {{ deploy_dir }}/scripts && ./start_{{ item }}.sh
    when: process_supervision == 'supervise' and mysql_alive_output.stdout.find('tidb_need_restart_now') != -1
    with_items:
      - tidb

  - name: start TiDB by systemd
    systemd: name=tidb-{{ tidb_port }}.service state=started enabled=no
    become: true
    when: process_supervision == 'systemd' and ansible_user != 'root' and mysql_alive_output.stderr.find('tidb_need_restart_now') != -1

  - name: start TiDB by systemd
    systemd: name=tidb-{{ tidb_port }}.service state=started enabled=no
    when: process_supervision == 'systemd' and ansible_user == 'root' and mysql_alive_output.stderr.find('tidb_need_restart_now') != -1
    vars:
      - ansible_become: false
      - ansible_become_user: root

  - name: wait up
    wait_for: |
      host={{ ansible_host }} port={{ tidb_status_port }} state=present
      send='GET /status HTTP/1.0\r\n\r\n' search_regex='TiDB'
